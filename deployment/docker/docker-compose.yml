version: '3.8'

services:
  # PostgreSQL 資料庫
  postgres:
    image: postgres:15-alpine
    container_name: fuco-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-fuco_production}
      POSTGRES_USER: ${DB_USER:-fuco_admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - fuco-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-fuco_admin}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 快取 (可選)
  redis:
    image: redis:7-alpine
    container_name: fuco-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - fuco-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # 後端應用
  backend:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.backend
    container_name: fuco-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    env_file:
      - ../../.env
    volumes:
      - ../../uploads:/app/uploads
      - ../../logs:/app/logs
      - ../../reports:/app/reports
      - ../../ai-models:/app/ai-models
    ports:
      - "${APP_PORT:-8847}:8847"
    networks:
      - fuco-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端應用
  frontend:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.frontend
    container_name: fuco-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8847
    ports:
      - "8848:3000"
    networks:
      - fuco-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理 (生產環境)
  nginx:
    image: nginx:alpine
    container_name: fuco-nginx
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../uploads:/usr/share/nginx/html/uploads:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - fuco-network

networks:
  fuco-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
